{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Weather-APP\\\\homework\\\\src\\\\containers\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"../components/Nav.jsx\";\nimport Cards from \"../components/Cards.jsx\";\nimport About from \"../components/About\";\nimport Contact from \"../components/Contact\";\nimport Ciudad from \"../components/Ciudad\";\n\n// const apiKey = \"0f6930562b3d19669a548c5e885d4df6\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nap = process.env.REACT_APP_apiKey;\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: Math.round(recurso.main.temp),\n          name: recurso.name,\n          country: recurso.sys.country,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          humidity: recurso.main.humidity,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon,\n          timezone: recurso.timezone / 3600\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenido\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          cities: cities,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        component: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/ciudad/:ciudadId\",\n        render: _ref => {\n          let {\n            match\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Ciudad, {\n            city: onFilter(match.params.ciudadId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"colorfooter\",\n          children: \"\\xA9 Carina Bosio | 2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Nav","Cards","About","Contact","Ciudad","ap","process","env","REACT_APP_apiKey","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","apiKey","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","country","sys","clouds","all","humidity","latitud","coord","lat","longitud","lon","timezone","alert","onFilter","ciudadId","parseInt","length","match","params"],"sources":["C:/Users/Usuario/Desktop/Weather-APP/homework/src/containers/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport Nav from \"../components/Nav.jsx\";\r\nimport Cards from \"../components/Cards.jsx\";\r\nimport About from \"../components/About\";\r\nimport Contact from \"../components/Contact\";\r\nimport Ciudad from \"../components/Ciudad\";\r\n\r\n\r\n\r\n// const apiKey = \"0f6930562b3d19669a548c5e885d4df6\";\r\nap= process.env.REACT_APP_apiKey;\r\n\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onClose(id) {\r\n    setCities((oldCities) => oldCities.filter((c) => c.id !== id));\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\r\n    )\r\n      .then((r) => r.json())\r\n      .then((recurso) => {\r\n        if (recurso.main !== undefined) {\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: Math.round(recurso.main.temp),\r\n            name: recurso.name,\r\n            country: recurso.sys.country,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            humidity: recurso.main.humidity,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon,\r\n            timezone: recurso.timezone/3600,\r\n          };\r\n          setCities((oldCities) => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter((c) => c.id === parseInt(ciudadId));\r\n    if (ciudad.length > 0) {\r\n      return ciudad[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"contenido\">\r\n        {/* NAV */}\r\n        {/* <Route path=\"/\" render={() => <Nav onSearch={onSearch} />} /> */}\r\n        <Route path=\"/\">\r\n          <Nav onSearch={onSearch} />\r\n        </Route>\r\n\r\n        {/* CARDS */}\r\n        {/* <Route\r\n        exact\r\n        path=\"/\"\r\n        render={() => <Cards cities={cities} onClose={onClose} />}\r\n      /> */}\r\n        <Route exact path=\"/\">\r\n          <Cards cities={cities} onClose={onClose} />\r\n        </Route>\r\n\r\n        {/* ABOUT */}\r\n        {/* <Route exact path=\"/about\" component={About} /> */}\r\n\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/contact\" component={Contact} />\r\n\r\n        {/* CIUDAD */}\r\n        {/* <Ciudad /> */}\r\n        <Route\r\n          exact\r\n          path=\"/ciudad/:ciudadId\"\r\n          render={({ match }) => (\r\n            <Ciudad city={onFilter(match.params.ciudadId)} />\r\n          )}\r\n        />\r\n\r\n        \r\n      </div>\r\n      <div>\r\n        <footer>\r\n          <p className=\"colorfooter\">Â© Carina Bosio | 2022</p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}